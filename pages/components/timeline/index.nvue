<template>
	<view class="tf-timeline">
		<view :class="[direction==='column'?'tf-timeline__column':'tf-timeline__row']">
			<view :class="[direction==='column'?'tf-timeline__column-text-container':'tf-timeline__row-text-container']">
				<view v-for="(item,index) in options" :key="index" :class="[direction==='column'?'tf-timeline__column-text':'tf-timeline__row-text']">
					<text :style="{color:index<=active?activeColor:deactiveColor}" :class="[direction==='column'?'tf-timeline__column-time':'tf-timeline__row-time']">{{item.time}}</text>
					<text :style="{color:index<=active?activeColor:deactiveColor}" :class="[direction==='column'?'tf-timeline__column-desc':'tf-timeline__row-desc']">{{item.desc}}</text>
				</view>
			</view>
			<view :class="[direction==='column'?'tf-timeline__column-container':'tf-timeline__row-container']">
				<view :class="[direction==='column'?'tf-timeline__column-line-item':'tf-timeline__row-line-item']" v-for="(item,index) in options"
				 :key="index">
					<view :class="[direction==='column'?'tf-timeline__column-line':'tf-timeline__row-line',direction==='column'?'tf-timeline__column-line--before':'tf-timeline__row-line--before']"
					 :style="{backgroundColor:index<=active&&index!==0?activeColor:index===0?'transparent':deactiveColor}"></view>
					<view :class="[direction==='column'?'tf-timeline__column-check':'tf-timeline__row-check']" v-if="index === active">
						<uni-icons :color="activeColor" type="checkbox-filled" size="14"></uni-icons>
					</view>
					<view :class="[direction==='column'?'tf-timeline__column-circle':'tf-timeline__row-circle']" v-else :style="{backgroundColor:index<active?activeColor:deactiveColor}"></view>
					<view :class="[direction==='column'?'tf-timeline__column-line':'tf-timeline__row-line',direction==='column'?'tf-timeline__column-line--after':'tf-timeline__row-line--after']"
					 :style="{backgroundColor:index<active&&index!==options.length-1?activeColor:index===options.length-1?'transparent':deactiveColor}"></view>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import uniIcons from '@/components/uni-icons/uni-icons.vue'
	export default {
		name: 'tfTimeline',
		components: {
			uniIcons
		},
		props: {
			direction: {
				// 排列方向 row column
				type: String,
				default: 'column'
			},
			activeColor: {
				// 激活状态颜色
				type: String,
				default: '#EB5841'
			},
			deactiveColor: {
				// 未激活状态颜色
				type: String,
				default: '#aaa'
			},
			active: {
				// 当前步骤
				type: Number,
				default: 0
			},
			options: {
				type: Array,
				default () {
					return []
				}
			} // 数据
		},
		data() {
			return {}
		}
	}
</script>

<style lang="scss" scoped>
	.tf-timeline {
		/* #ifndef APP-NVUE */
		display: flex;
		width: 100%;
		/* #endif */
		/* #ifdef APP-NVUE */
		flex: 1;
		/* #endif */
		flex-direction: column;
	}

	.tf-timeline__row {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
	}

	.tf-timeline__column {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row-reverse;
	}

	.tf-timeline__row-text-container {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
	}

	.tf-timeline__column-text-container {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
		flex: 1;
	}

	.tf-timeline__row-text {
		/* #ifndef APP-NVUE */
		display: inline-flex;
		/* #endif */
		flex: 1;
		flex-direction: column;
	}

	.tf-timeline__column-text {
		padding: 6px 0px;
		border-bottom-style: solid;
		border-bottom-width: 1px;
		border-bottom-color: $uni-border-color;
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
	}

	.tf-timeline__row-time {
		font-size: $uni-font-size-base;
		line-height: 16px;
		text-align: center;
	}

	.tf-timeline__column-time {
		font-size: 24rpx;
		text-align: left;
		line-height: 18px;
    color: $uni-text-color-grey;
	}

	.tf-timeline__row-desc {
		font-size: 12px;
		line-height: 14px;
		text-align: center;
	}

	.tf-timeline__column-desc {
		font-size: 30rpx;
		text-align: left;
    color: $uni-text-color;
		line-height: 48rpx;
	}

	.tf-timeline__row-container {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
	}

	.tf-timeline__column-container {
		/* #ifndef APP-NVUE */
		display: inline-flex;
		/* #endif */
		width: 30px;
		flex-direction: column;
	}

	.tf-timeline__row-line-item {
		/* #ifndef APP-NVUE */
		display: inline-flex;
		/* #endif */
		flex-direction: row;
		flex: 1;
		height: 14px;
		line-height: 14px;
		align-items: center;
		justify-content: center;
	}

	.tf-timeline__column-line-item {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
		flex: 1;
		align-items: center;
		justify-content: center;
	}

	.tf-timeline__row-line {
		flex: 1;
		height: 1px;
		background-color: $uni-text-color-grey;
	}

	.tf-timeline__column-line {
		width: 1px;
		background-color: $uni-text-color-grey;
	}

	.tf-timeline__row-line--after {
		transform: translateX(1px);
	}

	.tf-timeline__column-line--after {
		flex: 1;
		transform: translate(0px, 1px);
	}

	.tf-timeline__row-line--before {
		transform: translateX(-1px);
	}

	.tf-timeline__column-line--before {
		height: 6px;
		transform: translate(0px, -1px);
	}

	.tf-timeline__row-circle {
		width: 5px;
		height: 5px;
		border-radius: 100px;
		background-color: $uni-text-color-grey;
		margin: 0px 3px;
	}

	.tf-timeline__column-circle {
		width: 5px;
		height: 5px;
		border-radius: 100px;
		background-color: $uni-text-color-grey;
		margin: 4px 0px 5px 0px;
	}

	.tf-timeline__row-check {
		margin: 0px 6px;
	}

	.tf-timeline__column-check {
		height: 14px;
		line-height: 14px;
		margin: 2px 0px;
	}
</style>
